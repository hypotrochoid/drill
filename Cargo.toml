[package]
name = "drill"
version = "0.1.0"
edition = "2021"
rust-version = "1.74"


[dependencies]
egui = "0.26.2"
egui_extras = "0.26.2"
eframe = { version = "0.26.2", default-features = false, features = [
    "accesskit",     # Make egui comptaible with screen readers. NOTE: adds a lot of dependencies.
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
#    "persistence",   # Enable restoring app state when restarting the app.
] }

# You only need serde if you want app persistence:
serde = { version = "1", features = ["derive"] }
async-trait = "0.1.68"
time = {version = "0.3.20", features = ["wasm-bindgen", "formatting"]}
time-macros = {version = "0.2.8"}
getrandom = { version = "0.2", features = ["js"] }
rand_distr = "0.4.0"
rand = "0.8.3"
rand_pcg = "0.3.0"
lazy_static = "1.4.0"
rand_core = "0.6.4"
hex = "0.4"
enum_delegate = "0.2.0"
strum = "0.25"
strum_macros = "0.25"
fuzzy-matcher = "0.3.7"
clap = { version = "4.4.8", features = ["derive"] }
#pontoon = { git = "https://github.com/opacous/pontoon", branch = "master" }
toml = "0.8.8"
maplit = "1.0.2"
subenum = "1.1.1"
derivative = "2.2.0"
linked-hash-map = "0.5.6"
enum_common_fields = "0.7.0"
anyhow = "1.0.80"
fsrs = "0.5.0"
cang-jie = "0.18.0"
tantivy = "0.21.1"
jieba-rs = "0.6.8"

[dependencies.derive_more]
version= "=1.0.0-beta.6"
features = ["display"]

[dependencies.uuid]
version = "1.4.1"
features = [
    "v4",                # Lets you generate random UUIDs
    "fast-rng",          # Use a faster (but still sufficiently random) RNG
    "macro-diagnostics", # Enable better diagnostics for compile-time UUIDs
]

[dependencies.serde_json]
version = "1.0"
features = [
    "preserve_order",
]


# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tracing-subscriber = "0.3"
parking_lot = "0.12.1"
flume = "0.11.0"

# web:
#[target.'cfg(target_arch = "wasm32")'.dependencies]
#console_error_panic_hook = "0.1.6"
#tracing-wasm = "0.2"
#wasm-bindgen-futures = "0.4"
#gloo-console = "0.2"


#[profile.release]
#opt-level = 3 # fast and small wasm
#codegen-units = 1


# Optimize all dependencies even in debug builds:
#[profile.dev.package."*"]
#opt-level = 3

[patch.crates-io]

[profile.dev]
debug = 1
opt-level = 0


# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }

# If you fork https://github.com/emilk/egui you can test with:
# egui = { path = "../egui/crates/egui" }
# eframe = { path = "../egui/crates/eframe" }
